---

- name: Extract secret_id creation_date
  shell: grep -w creation_time secret_id.meta.json | awk '{print $2;}' | cut -d'"' -f 2 | cut -c-10
  args:
    chdir: "{{ powercurve_directory }}/key/vault"
  register: creation_date

- name: Extract secret_id update_date
  shell: date '+%Y-%m-%d' -d "{{ creation_date.stdout }}+{{ vault_secretid_renewal_days }} days"
  register: update_date

- name: Get current date
  shell: date +%Y-%m-%d
  register: current_date

# Debugging
- debug: var=creation_date.stdout
- debug: var=update_date.stdout
- debug: var=current_date.stdout


- name: Regenerate SECRET_ID
  block:
    # Prepare temp dir to be save new secret id
    - file:
        path: "/tmp/hashicorp/vault"
        state: directory
        recurse: yes

    # Update secret id if create date is over than update date
    - script: "{{ vault_gen_secretid_script }} --secret {{ vault_secret_id }} --role {{ vault_role_id }} --platform {{ vault_platform }} --ns {{ vault_ns }} --host {{ vault_host }} --env {{ vault_env }} --dp_sa {{ vault_dp_sa }} --dp_cert {{ vault_dp_cert }} --dp_key {{ vault_dp_key }} --output_dir /tmp/hashicorp/vault"
      args:
        executable: "{{ python_path }}"
        chdir: "{{ git_repo_directory }}"

    # Extract new secret_id create date
    - shell: grep -w creation_time secret_id.meta.json | awk '{print $2;}' | cut -d'"' -f 2 | cut -c1-19
      args:
        chdir: "/tmp/hashicorp/vault"

    # Make encrypted zip for generated secret files
    - shell: zip -P "{{ artifactory_password }}" secret_id.zip secret_id.*.json
      args:
        chdir: /tmp/hashicorp/vault

    # Publish zip file on JFrog Artifactory on current
    - shell: "curl -sSf -k -u '{{ artifactory_user }}':'{{ artifactory_password }}' -X PUT -T secret_id.zip {{ artifactory_url }}/artifactory/{{ artifactory_repository }}/dependencies/hashicorp/vault/secret_id/{{ vault_env }}/approle_{{ vault_env }}_read_write_0/current/secret_id.zip"
      args:
        chdir: /tmp/hashicorp/vault

    # Publish zip file on JFrog Artifactory on create time
    - shell: "curl -sSf -k -u '{{ artifactory_user }}':'{{ artifactory_password }}' -X PUT -T secret_id.zip {{ artifactory_url }}/artifactory/{{ artifactory_repository }}/dependencies/hashicorp/vault/secret_id/{{ vault_env }}/approle_{{ vault_env }}_read_write_0/{{ new_secret_id_created_date.stdout }}/secret_id.zip"
      args:
        chdir: /tmp/hashicorp/vault

  when: current_date.stdout >= update_date.stdout




